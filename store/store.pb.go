// Code generated by protoc-gen-go.
// source: github.com/yarbelk/todo/store/store.proto
// DO NOT EDIT!

/*
Package store is a generated protocol buffer package.

It is generated from these files:
	github.com/yarbelk/todo/store/store.proto

It has these top-level messages:
	TaskDefinition
	TaskID
*/
package store

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	client "github.com/micro/go-micro/client"
	server "github.com/micro/go-micro/server"
	context "golang.org/x/net/context"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type TaskDefinition struct {
	Id          string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Description string `protobuf:"bytes,2,opt,name=description" json:"description,omitempty"`
	Completed   bool   `protobuf:"varint,3,opt,name=completed" json:"completed,omitempty"`
}

func (m *TaskDefinition) Reset()                    { *m = TaskDefinition{} }
func (m *TaskDefinition) String() string            { return proto.CompactTextString(m) }
func (*TaskDefinition) ProtoMessage()               {}
func (*TaskDefinition) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type TaskID struct {
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
}

func (m *TaskID) Reset()                    { *m = TaskID{} }
func (m *TaskID) String() string            { return proto.CompactTextString(m) }
func (*TaskID) ProtoMessage()               {}
func (*TaskID) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func init() {
	proto.RegisterType((*TaskDefinition)(nil), "TaskDefinition")
	proto.RegisterType((*TaskID)(nil), "TaskID")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ client.Option
var _ server.Option

// Client API for Storer service

type StorerClient interface {
	Save(ctx context.Context, in *TaskDefinition, opts ...client.CallOption) (*TaskDefinition, error)
	Load(ctx context.Context, in *TaskID, opts ...client.CallOption) (*TaskDefinition, error)
}

type storerClient struct {
	c           client.Client
	serviceName string
}

func NewStorerClient(serviceName string, c client.Client) StorerClient {
	if c == nil {
		c = client.NewClient()
	}
	if len(serviceName) == 0 {
		serviceName = "storer"
	}
	return &storerClient{
		c:           c,
		serviceName: serviceName,
	}
}

func (c *storerClient) Save(ctx context.Context, in *TaskDefinition, opts ...client.CallOption) (*TaskDefinition, error) {
	req := c.c.NewRequest(c.serviceName, "Storer.Save", in)
	out := new(TaskDefinition)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *storerClient) Load(ctx context.Context, in *TaskID, opts ...client.CallOption) (*TaskDefinition, error) {
	req := c.c.NewRequest(c.serviceName, "Storer.Load", in)
	out := new(TaskDefinition)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Storer service

type StorerHandler interface {
	Save(context.Context, *TaskDefinition, *TaskDefinition) error
	Load(context.Context, *TaskID, *TaskDefinition) error
}

func RegisterStorerHandler(s server.Server, hdlr StorerHandler, opts ...server.HandlerOption) {
	s.Handle(s.NewHandler(&Storer{hdlr}, opts...))
}

type Storer struct {
	StorerHandler
}

func (h *Storer) Save(ctx context.Context, in *TaskDefinition, out *TaskDefinition) error {
	return h.StorerHandler.Save(ctx, in, out)
}

func (h *Storer) Load(ctx context.Context, in *TaskID, out *TaskDefinition) error {
	return h.StorerHandler.Load(ctx, in, out)
}

func init() { proto.RegisterFile("github.com/yarbelk/todo/store/store.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 195 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0xd2, 0x4c, 0xcf, 0x2c, 0xc9,
	0x28, 0x4d, 0xd2, 0x4b, 0xce, 0xcf, 0xd5, 0xaf, 0x4c, 0x2c, 0x4a, 0x4a, 0xcd, 0xc9, 0xd6, 0x2f,
	0xc9, 0x4f, 0xc9, 0xd7, 0x2f, 0x2e, 0xc9, 0x2f, 0x4a, 0x85, 0x90, 0x7a, 0x05, 0x45, 0xf9, 0x25,
	0xf9, 0x4a, 0x09, 0x5c, 0x7c, 0x21, 0x89, 0xc5, 0xd9, 0x2e, 0xa9, 0x69, 0x99, 0x79, 0x99, 0x25,
	0x99, 0xf9, 0x79, 0x42, 0x7c, 0x5c, 0x4c, 0x99, 0x29, 0x12, 0x8c, 0x0a, 0x8c, 0x1a, 0x9c, 0x41,
	0x4c, 0x99, 0x29, 0x42, 0x0a, 0x5c, 0xdc, 0x29, 0xa9, 0xc5, 0xc9, 0x45, 0x99, 0x05, 0x20, 0x69,
	0x09, 0x26, 0xb0, 0x04, 0xb2, 0x90, 0x90, 0x0c, 0x17, 0x67, 0x72, 0x7e, 0x6e, 0x41, 0x4e, 0x6a,
	0x49, 0x6a, 0x8a, 0x04, 0xb3, 0x02, 0xa3, 0x06, 0x47, 0x10, 0x42, 0x40, 0x49, 0x82, 0x8b, 0x0d,
	0x64, 0x83, 0xa7, 0x0b, 0xba, 0xc9, 0x46, 0x11, 0x5c, 0x6c, 0xc1, 0x20, 0xa7, 0x14, 0x09, 0x69,
	0x71, 0xb1, 0x04, 0x27, 0x96, 0xa5, 0x0a, 0xf1, 0xeb, 0xa1, 0x3a, 0x46, 0x0a, 0x5d, 0x40, 0x89,
	0x41, 0x48, 0x89, 0x8b, 0xc5, 0x27, 0x3f, 0x31, 0x45, 0x88, 0x5d, 0x0f, 0x62, 0x2c, 0x16, 0x35,
	0x49, 0x6c, 0x60, 0xcf, 0x19, 0x03, 0x02, 0x00, 0x00, 0xff, 0xff, 0xc9, 0xd1, 0xb5, 0x22, 0x09,
	0x01, 0x00, 0x00,
}
